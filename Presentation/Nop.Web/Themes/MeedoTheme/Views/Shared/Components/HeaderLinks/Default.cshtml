@model HeaderLinksModel
@using System.Text.Encodings.Web
<div class="header-links header-top-right">
    <ul>
        @await Component.InvokeAsync("Widget", new { widgetZone = "header_links_before" })
        @await Component.InvokeAsync("AdminHeaderLinks")
        @*<li class="instagram"><a href="@Model.InstagramLink" target="_blank"><i class="fa fa-instagram"></i></a></li>*@
        <li class="phone">
            <a href="https://api.whatsapp.com/send?phone=919841741237&text=I'm%20interested%20in%20your%20tees" target="_blank">
                <i class="fa fa-whatsapp fa-lg"></i>
                <span style="margin-left:5px;">98417 41237</span>
            </a>
        </li>
        <li class="email">
            <a href="mailto:support@meedo.in?Subject=Enquiry" target="_blank">
                <span class="fa fa-envelope-o fa-lg"></span>
                <span style="margin-left:5px;">@T("Email.SupportEmail")</span>
            </a>
        </li>
        @*@if (Model.IsAuthenticated)
        {
            <li  class="my-account"><a href="@Url.RouteUrl("CustomerInfo")" title="@T("Account.MyAccount")" class="ico-account"></a></li>
        }
        else
        {
            <li class="register"><a href="@Url.RouteUrl("Register")" title="@T("Account.Register")" class="ico-register"></a></li>
        }*@
        @if (Model.WishlistEnabled)
    {
        <li class="my-wishlist">
            <a href="@Url.RouteUrl("Wishlist")" class="ico-wishlist">
                <span class="wishlist-label">@T("Wishlist")</span>
                <span class="wishlist-qty">@T("Wishlist.HeaderQuantity", Model.WishlistItems)</span>
            </a>
        </li>
}
        @if (Model.AllowPrivateMessages)
    {
        <li>
            <a href="@Url.RouteUrl("PrivateMessages", new { tab = "" })" class="ico-inbox">
                <span class="inbox-label">@T("PrivateMessages.Inbox")</span>
                <span class="inbox-unread">@Model.UnreadPrivateMessages</span>
            </a>
        </li>
}
        @if (Model.IsAuthenticated)
    {
        <li class="logout"><a href="@Url.RouteUrl("Logout")" title="@T("Account.Logout")" class="ico-logout"><span>@T("Account.Logout")</span></a></li>
}
else
{
    <li class="login"><a href="@Url.RouteUrl("Login")" title="@T("Account.Login")" class="ico-login"><span>@T("Account.Login")</span></a></li>
}
        @await Component.InvokeAsync("FlyoutShoppingCart")
        @await Component.InvokeAsync("Widget", new { widgetZone = "header_links_after" })        
        
    </ul>
    @if (Model.AllowPrivateMessages && !string.IsNullOrEmpty(Model.AlertMessage))
    {
        //new private message notification
        <script type="text/javascript" asp-location="Footer">
            $(document).ready(function () {
                displayPopupNotification('@Html.Raw(JavaScriptEncoder.Default.Encode(Model.AlertMessage))', 'success', false);
            });
        </script>
    }
</div>
