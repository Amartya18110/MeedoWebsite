
@model CheckoutPaymentMethodModel

<div class="checkout-data">
    @await Component.InvokeAsync("Widget", new { widgetZone = "op_checkout_payment_method_top" })
    <div class="section payment-method">
        @if (Model.DisplayRewardPoints && Model.PaymentMethods.Count > 0)
        {
            <div class="use-reward-points">
                @if (Model.RewardPointsEnoughToPayForOrder)
                {
                    <input asp-for="UseRewardPoints" onclick="PaymentMethod.toggleUseRewardPoints(this)" />
                }
                else
                {
                    <input asp-for="UseRewardPoints" />
                }
                <label asp-for="UseRewardPoints">@string.Format(T("Checkout.UseRewardPoints").Text, Model.RewardPointsBalance, Model.RewardPointsAmount)</label>
                @if (Model.RewardPointsEnoughToPayForOrder)
                {
                    <script type="text/javascript">
                        $(document).ready(function() {
                            PaymentMethod.toggleUseRewardPoints($('#@Html.IdFor(model => model.UseRewardPoints)'));
                        });
                    </script>
                }
            </div>
        }
        @if (Model.PaymentMethods.Count > 0)
        {

            <div class="card">
                <div class="card-header">
                    <h5 class="card-title" style="color:#ea5648; font-weight:bold">Credit Card / Debit Card / Net Banking / UPI</h5>
                </div>
                <div class="card-body">
                    <ul class="method-list" id="payment-method-block">
                        @for (var i = 0; i < Model.PaymentMethods.Count; i++)
                        {

                            var paymentMethod = Model.PaymentMethods[i];
                            var paymentMethodName = paymentMethod.Name;
                            if (!string.IsNullOrEmpty(paymentMethod.Fee))
                            {
                                paymentMethodName = T("Checkout.SelectPaymentMethod.MethodAndFee", paymentMethodName, paymentMethod.Fee).Text;
                            }
                            <li>
                                <div class="method-name">
                                    @*@if (!string.IsNullOrEmpty(paymentMethod.LogoUrl))
                                        {
                                            <div class="payment-logo col-sm-12 col-md-4">
                                                <label for="paymentmethod_@(i)">
                                                    <img src="@paymentMethod.LogoUrl" alt="@paymentMethodName" />
                                                </label>
                                            </div>
                                        }*@
                                    <div class="payment-details panel panel-default">
                                        <div class="large radio">
                                            <label class="panel-heading">
                                                <input id="paymentmethod_@(i)" type="radio" name="paymentmethod" value="@(paymentMethod.PaymentMethodSystemName)" checked="@paymentMethod.Selected">
                                                <span class="cr"><i class="cr-icon fa fa-circle"></i></span>
                                                <label for="paymentmethod_@(i)" style="font-weight:bold; color:#ea5648">
                                                    @paymentMethodName
                                                </label>
                                            </label>
                                           
                                        </div>
                                        @*<input id="paymentmethod_@(i)" type="radio" name="paymentmethod" class="custom-control-input" value="@(paymentMethod.PaymentMethodSystemName)" checked="@paymentMethod.Selected" />
                                            <label for="paymentmethod_@(i)">@paymentMethodName</label>*@
                                    </div>
                                </div>
                            </li>


                        }
                    </ul>
                </div>
            </div>
        }
        else
        {
            <div class="message-error">
                @T("Checkout.NoPaymentMethods")
            </div>
        }
    </div>
    @await Component.InvokeAsync("Widget", new { widgetZone = "op_checkout_payment_method_bottom" })
</div>      